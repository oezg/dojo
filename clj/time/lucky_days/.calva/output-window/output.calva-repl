; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
;
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;

; Starting Jack-in: (cd /home/oezg/code/dojo/clj/time/lucky_days; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless)
; Using host:port 127.0.0.1:44817 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉lucky-days.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉lucky-days.core꞉> 
; Jack-in done.
clj꞉lucky-days.core꞉> 
(+ 8 9)
17
clj꞉lucky-days.core꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/lucky_days/core.clj:9:1).
; print - failed: vector? at: [:fn-tail :arity-n :bodies :params] spec: :clojure.core.specs.alpha/param-list
; (print "foo") - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
clj꞉lucky-days.core꞉> 
#'lucky-days.core/ok?
clj꞉lucky-days.core꞉> 
; foo
nil
clj꞉lucky-days.core꞉> 
; Syntax error compiling at (src/lucky_days/core.clj:15:1).
; No such namespace: jt
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0x2f398f08 "2024-10-16"]
clj꞉lucky-days.core꞉> 
; Execution error (ClassNotFoundException) at java.net.URLClassLoader/findClass (URLClassLoader.java:445).
; jt.LocalDate
clj꞉lucky-days.core꞉> 
; Execution error (ClassNotFoundException) at java.net.URLClassLoader/findClass (URLClassLoader.java:445).
; jt.LocalDate
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0x301dc16a "2024-10-16"]
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0x62eecf3 "2024-10-16"]
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0x746811ef "2024-10-16"]
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0x6f623868 "2024-10-16"]
clj꞉lucky-days.core꞉> 
#object[java.time.LocalDate 0xabf5956 "2024-10-16"]
clj꞉lucky-days.core꞉> 
; Syntax error compiling at (src/lucky_days/core.clj:15:1).
; Unable to find static field: now in class java.time.LocalDate
clj꞉lucky-days.core꞉> 
#object[java.time.DayOfWeek 0x3cedf73c "MONDAY"]
clj꞉lucky-days.core꞉> 
#object[java.time.DayOfWeek 0x585704ba "WEDNESDAY"]
clj꞉lucky-days.core꞉> 
false
clj꞉lucky-days.core꞉> 
true
clj꞉lucky-days.core꞉> 
true
clj꞉lucky-days.core꞉> 
#object[java.time.DayOfWeek 0x585704ba "WEDNESDAY"]
clj꞉lucky-days.core꞉> 
